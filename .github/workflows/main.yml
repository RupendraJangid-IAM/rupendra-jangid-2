name: Main Workflow

on:
  issues:
    types: [opened, assigned, edited]
  pull_request:
    types: [opened, closed]

jobs:
  update-project-status:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Step 1: Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      # Debug Auth
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token --debug -p

      - name: Test GitHub CLI Authentication
        run: gh auth status

      # # Step 2: Authenticate GitHub CLI
      # - name: Authenticate GitHub CLI
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #   run: |
      #     echo "${GH_TOKEN}" | gh auth login --with-token

      # Step 3: Add the issue to the project
      - name: Add Issue to Project
        if: github.event_name == 'issues' && github.event.action == 'opened'
        env:
          PROJECT_ID: PVT_kwHOC4nNZ84AwJjl
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq .id)
          gh project item add $PROJECT_ID --content-id $ISSUE_ID

      # Step 4: Set Status to "Open" when an issue is added to the project
      - name: Set Status to Open
        if: github.event_name == 'issues' && github.event.action == 'opened'
        env:
          PROJECT_ID: PVT_kwHOC4nNZ84AwJjl
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq .id)
          gh project item-field update $PROJECT_ID --field "Status" --value "Open" --item-id $ISSUE_ID

      # Step 5: Update Status to "Todo" when issue is assigned
      - name: Set Status to Todo
        if: github.event_name == 'issues' && github.event.action == 'assigned'
        env:
          PROJECT_ID: PVT_kwHOC4nNZ84AwJjl
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq .id)
          gh project item-field update $PROJECT_ID --field "Status" --value "Todo" --item-id $ISSUE_ID

      # Step 6: Update Status to "In-Progress" when a branch is linked
      - name: Set Status to In-Progress
        if: github.event_name == 'issues' && github.event.action == 'edited' && contains(github.event.issue.body, 'linked branch')
        env:
          PROJECT_ID: PVT_kwHOC4nNZ84AwJjl
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq .id)
          gh project item-field update $PROJECT_ID --field "Status" --value "In-Progress" --item-id $ISSUE_ID

      # Step 7: Restrict transitions from "In-Progress"
      - name: Restrict Status Changes
        if: github.event_name == 'issues' && github.event.action == 'edited'
        env:
          PROJECT_ID: PVT_kwHOC4nNZ84AwJjl
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq .id)
          ALLOWED_STATUS="Blocked, Ready for QA, Todo"
          CURRENT_STATUS=$(gh project item-field get $PROJECT_ID --field "Status" --item-id $ISSUE_ID --jq .value)
          if [[ ! "$ALLOWED_STATUS" =~ "$CURRENT_STATUS" ]]; then
            echo "Invalid status transition from In-Progress to $CURRENT_STATUS"
            exit 1
          fi
